<form id="form-transaksi" enctype="multipart/form-data" method="POST">
	<div class="card">
 <div class="card-body">
 <input type="hidden" name="flag">
 <input type="hidden" name="" value="<?php echo static::e($last_transaction['bulan']); ?>">
 <input type="hidden" name="" value="<?php echo static::e($last_transaction['tahun']); ?>">
 <div class="form-group">
 <label class="form-label">Nama Perusahaan</label>
 <input type="text" class="form-control" value="<?php echo static::e($data_perusahaan['nama_perusahaan']); ?>" disabled>
 </div>
 <div class="form-group">
 <label class="form-label">Periode Bulan</label>
 <input type="text" class="form-control" name="" value="<?php echo static::e($last_transaction['bulan_huruf']); ?>" disabled>
 </div>
 <div class="form-group">
 <label class="form-label">Periode Tahun</label>
 <input type="text" class="form-control" name="" value="<?php echo static::e($last_transaction['tahun']); ?>" disabled>
 </div>
 
 
 </div>
	</div>
	<div class="card">

 <div class="card-body">



 <table class="table table-bordered">
 <tr>
 <th>Tanggal</th>
 <th>Meter Awal</th>
 <th>Meter Akhir</th>
 <th>Pemakaian</th>
 <th>Action</th>
 </tr>
 <tbody id="content-transaksi">

 </tbody>
 </table>



 </div>
 <!-- /.card-body -->
	</div>

	<div class="card">
 <div class="card-body">
 <div class="form-group">
 <label class="form-label">Scan Meteran</label>
 <input type="file" class="form-control" name="file_meteran" id="file_meteran">
 </div>
 </div>
	</div>
	<div class="form-group">
 <button id="btn-submit" class="btn btn-primary" type="submit">Submit</button>
	</div>
</form>

<?php $this->startSection('js-export'); ?>

<?php $this->stopSection(); ?>
<?php $this->startSection('js-inline'); ?>
<script>
	let $inputMeteranAwal = null;
	let $inputMeteranAkhir = null;
	let $inputPemakaian = null;
	let $tombolLibur = null;
	let contohni = null;
	let $btnSubmit = null;
	$(function() {

 $inputMeteranAwal = $(".input-meteran-awal");
 $inputMeteranAkhir = $(".input-meteran-akhir");
 $inputPemakaian = $(".input-pemakaian");
 $tombolLibur = $(".tombol-libur");
 $btnSubmit = $("#btn-submit");
 $formTransaksi = $("#form-transaksi");

 let formData = {
 xxx : 'xxx',
 }
 data = Object.keys(formData).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(formData[key])).join('&');
 $("body").loading('start');
 axios.post('<?php echo static::e(base_url('client-transaksi/generateTahapInput')); ?>', data)
 .then(res => {
 $("body").loading('stop');
 data = res.data;
 $("input[name='flag']").val(data.flag);

 const Container = new ContainerPemakaian();

 let currentNum = null;
 data.detail_transaksi.forEach((element,index) => {
 if (data.flag == 'tambah') {
 if (index == 0) {
 currentNum = element.awal;
 }
 element.awal = currentNum;
 currentNum = currentNum + 1;
 element.akhir = currentNum;
 }
 Container.addPemakaian(new Pemakaian(element.tanggal, element.awal, element.akhir, element.id));
 })

 const objRenderer = new Renderer(Container, "#content-transaksi");
 objRenderer.render();


 })
 .catch(err => {
 $("body").loading('stop');

 })



 $("#form-transaksi").submit(function(event) {
 event.preventDefault();
 $("body").loading('start');

 $(this).attr('disabled', true);
 data = new FormData($formTransaksi[0]);

 axios.post('<?php echo static::e(base_url('client-transaksi/actionInputData')); ?>', data)
 .then(res => {
 if (!res.data.success) 
 {
 swal({
 icon : 'warning',
 title : 'Gagal',
 text : 'Tidak ada Data',
 buttons : false,
 timer : 1500,
 })
 $("body").loading('stop');
 $(this).attr('disabled', false);

 } else
 {
 window.location.href = "<?php echo static::e(base_url('client-transaksi')); ?>"; 

 }


 })
 .catch(err => {
 $(this).attr('disabled', false);
 $("body").loading('stop');

 });
 });








	});


	function Pemakaian(tanggal,meter_awal,meter_akhir, id) {
 let _tanggal = tanggal;
 let _meter_awal = meter_awal;
 let _meter_akhir = meter_akhir;
 let _pemakaian = meter_akhir - meter_awal;
 let _id = id;

 function getId () {
 return _id;

 }
 function getTanggal () {
 return _tanggal;
 }

 function getMeterAwal() {
 if (parseInt(_meter_awal) >= 0 ) {
 return parseInt(_meter_awal);
 }
 return null;
 }

 function getMeterAkhir () {
 if (getMeterAwal() <= parseInt(_meter_akhir)) {
 return (_meter_akhir);
 }
 return null;
 }

 function getPemakaian () {
 if (parseInt(_pemakaian) >= 0 ) {
 return (_pemakaian);
 }
 return null;
 }

 function setPemakaian() {
 if ((getMeterAkhir() >= getMeterAwal())) {
 _pemakaian = getMeterAkhir() - getMeterAwal();
 } else {
 _pemakaian = "";
 }
 }
 function setTanggal(intTanggal) {
 _tanggal = intTanggal;
 }
 function setMeterAwal(intMeterAwal) {
 _meter_awal = intMeterAwal;
 if (this.getMeterAwal() > this.getMeterAkhir()) {
 this.setMeterAkhir(null);
 } else {
 setPemakaian();
 }
 }
 function setMeterAkhir(intMeterAkhir) {
 intMeterAkhir = parseInt(intMeterAkhir);

 if (getMeterAwal() <= intMeterAkhir) {
 _meter_akhir = intMeterAkhir;
 }
 setPemakaian();

 }

 return {
 getId,
 getTanggal,
 getMeterAwal,
 getMeterAkhir,
 getPemakaian,
 setTanggal,
 setMeterAwal,
 setMeterAkhir,

 }
	}

	function ContainerPemakaian() {
 let _daftar_libur = new Array();
 let _daftar_pemakaian = new Array();

 function getPemakaian(i) {
 return _daftar_pemakaian[i];
 }

 function setMeterAkhir(i, v) {

 getPemakaian(i).setMeterAkhir(v);
 if (typeof _daftar_pemakaian[i + 1] !== 'undefined') {
 getPemakaian(i+1).setMeterAwal(getPemakaian(i).getMeterAkhir());
 }

 }

 function getAllPemakaian() {
 return _daftar_pemakaian;
 }

 function addPemakaian(Pemakaian) {
 _daftar_pemakaian.push(Pemakaian);
 }

 function getAllDaftarLibur() {
 return _daftar_libur;
 }

 function addDaftarLibur(daftar) {
 if ($.inArray(daftar, _daftar_libur) == -1) {
 _daftar_libur.push(daftar);
 }
 _daftar_libur.sort((a,b) => a - b);
 }

 function removeDaftarLibur(daftar) {
 if ($.inArray(daftar, _daftar_libur) != -1) {
 let index = $.inArray(daftar, _daftar_libur);
 _daftar_libur.splice(index,1);
 }
 _daftar_libur.sort((a,b) => a - b);
 }

 return {
 getPemakaian,
 addPemakaian,
 getAllPemakaian,
 setMeterAkhir,
 addDaftarLibur,
 removeDaftarLibur,
 getAllDaftarLibur,
 };
	}

	function Renderer(AllData, divContent) {

 let elements = [];

 function singleRender(AllData,index) {
 objPemakaian = AllData.getPemakaian(index);

 let tableRow = $("<tr/>");
 let kolomTanggal = $("<td/>");

 let inputIdDetail = $("<input/>", {
 type : 'hidden',
 name : 'input-detail_transaksi_id[]',
 value : objPemakaian.getId(),
 });
 let inputTanggal = $("<input/>", {
 type : 'text',
 name : 'input-tanggal[]',
 class : 'form-control',
 readonly : true,
 id : "input_tanggal_"+index,
 value : objPemakaian.getTanggal(),

 });
 let kolomMeterAwal = $("<td/>");
 let inputMeterAwal = $("<input/>", {
 type : 'number',
 required : true,
 name : 'input-meter_awal[]',
 class : 'form-control',
 id : "input_meter_awal_"+index,
 value : objPemakaian.getMeterAwal(),
 readonly : true,
 });
 let kolomMeterAkhir = $("<td/>");
 let inputMeterAkhir = $("<input/>", {
 type : 'number',
 required : true,
 name : 'input-meter_akhir[]',
 class : 'form-control',
 id : "input_meter_akhir_"+index,
 value : objPemakaian.getMeterAkhir(),
 });
 let kolomPemakaian = $("<td/>");
 let inputPemakaian = $("<input/>", {
 type : 'number',
 required : true,
 name : 'input-pemakaian[]',
 class : 'form-control',
 id : "input_pemakaian_"+index,
 readonly : true,
 value : objPemakaian.getPemakaian()
 });

 let kolomAction = $("<td>");
 let btnAction = $("<button/>", {
 type : 'button',
 text : 'libur',
 class : "btn btn-secondary",
 id : "btn_action_"+index,
 "data-libur" : "off",
 });


 inputMeterAkhir.change(function(event) {
 let objPemakaian = 
 AllData.setMeterAkhir(index,$(this).val());

 updateData();

 });

 btnAction.click(function(event) {

 let value = $(this).attr("data-libur");


 if (value == "on") {
 AllData.removeDaftarLibur(index);
 $(this).parents('tr:first').removeClass('bersinar');

 $(this).attr("data-libur", "off");
 } else {
 AllData.addDaftarLibur(index);
 $(this).parents('tr:first').addClass('bersinar')
 $(this).attr("data-libur", "on");
 }


 });

 elements.push({
 tanggal : inputTanggal.attr("id"),
 meter_awal : inputMeterAwal.attr("id"),
 meter_akhir : inputMeterAkhir.attr("id"),
 pemakaian : inputPemakaian.attr("id"),
 })

 let populate = tableRow.append(inputIdDetail)
 .append(kolomTanggal.append(inputTanggal))
 .append(kolomMeterAwal.append(inputMeterAwal))
 .append(kolomMeterAkhir.append(inputMeterAkhir))
 .append(kolomPemakaian.append(inputPemakaian))
 .append(kolomAction.append(btnAction));

 return populate;

 }

 function updateData() {

 AllData.getAllPemakaian().forEach((ee, index) => {
 $("#"+elements[index].tanggal).val(ee.getTanggal());
 $("#"+elements[index].meter_awal).val(ee.getMeterAwal());
 $("#"+elements[index].meter_akhir).val(ee.getMeterAkhir());
 $("#"+elements[index].pemakaian).val(ee.getPemakaian());

 })
 }

 function render() {

 AllData.getAllPemakaian().forEach((element, index) => {
 $(divContent).append(singleRender(AllData, index));
 })

 }



 return {
 render,
 }
	}

</script>
<?php $this->stopSection(); ?>